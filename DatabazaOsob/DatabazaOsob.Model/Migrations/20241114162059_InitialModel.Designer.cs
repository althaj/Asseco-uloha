// <auto-generated />
using System;
using DatabazaOsob.Model.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DatabazaOsob.Model.Migrations
{
    [DbContext(typeof(DatabazaOsobContext))]
    [Migration("20241114162059_InitialModel")]
    partial class InitialModel
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.0");

            modelBuilder.Entity("DatabazaOsob.Model.Entities.Bydliste", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Mesto")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("PSC")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("TEXT");

                    b.Property<int>("StatId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Ulice")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("StatId");

                    b.ToTable("Bydliste");
                });

            modelBuilder.Entity("DatabazaOsob.Model.Entities.Kontakt", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Hodnota")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<int>("OsobaId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TypKontaktuId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("OsobaId");

                    b.HasIndex("TypKontaktuId");

                    b.ToTable("Kontakt");
                });

            modelBuilder.Entity("DatabazaOsob.Model.Entities.Narodnost", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Hodnota")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Narodnost");
                });

            modelBuilder.Entity("DatabazaOsob.Model.Entities.Osoba", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("BydlisteId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DatumNarozeni")
                        .HasColumnType("TEXT");

                    b.Property<string>("Jmeno")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<int>("NarodnostId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Prijmeni")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("RodneCislo")
                        .HasColumnType("TEXT");

                    b.Property<string>("RodnePrijmeni")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("BydlisteId");

                    b.HasIndex("NarodnostId");

                    b.ToTable("Osoba");
                });

            modelBuilder.Entity("DatabazaOsob.Model.Entities.Stat", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Hodnota")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Stat");
                });

            modelBuilder.Entity("DatabazaOsob.Model.Entities.TypKontaktu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Hodnota")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("TypKontaktu");
                });

            modelBuilder.Entity("DatabazaOsob.Model.Entities.Bydliste", b =>
                {
                    b.HasOne("DatabazaOsob.Model.Entities.Stat", "Stat")
                        .WithMany()
                        .HasForeignKey("StatId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Stat");
                });

            modelBuilder.Entity("DatabazaOsob.Model.Entities.Kontakt", b =>
                {
                    b.HasOne("DatabazaOsob.Model.Entities.Osoba", "Osoba")
                        .WithMany("Kontakty")
                        .HasForeignKey("OsobaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DatabazaOsob.Model.Entities.TypKontaktu", "TypKontaktu")
                        .WithMany()
                        .HasForeignKey("TypKontaktuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Osoba");

                    b.Navigation("TypKontaktu");
                });

            modelBuilder.Entity("DatabazaOsob.Model.Entities.Osoba", b =>
                {
                    b.HasOne("DatabazaOsob.Model.Entities.Bydliste", "Bydliste")
                        .WithMany()
                        .HasForeignKey("BydlisteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DatabazaOsob.Model.Entities.Narodnost", "Narodnost")
                        .WithMany()
                        .HasForeignKey("NarodnostId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bydliste");

                    b.Navigation("Narodnost");
                });

            modelBuilder.Entity("DatabazaOsob.Model.Entities.Osoba", b =>
                {
                    b.Navigation("Kontakty");
                });
#pragma warning restore 612, 618
        }
    }
}
